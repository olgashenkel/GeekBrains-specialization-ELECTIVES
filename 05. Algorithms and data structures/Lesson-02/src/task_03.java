/* Сортировка вставками

Так же, как нечто среднее, между сортировкой пузырьком и выбором, можно
выделить сортировку вставками. Принцип работы у нее точно такой же, как у
предыдущей, только после сравнения двух элементов мы не запоминаем индекс
наименьшего (наибольшего) из элементов, а сразу производим перестановку.
******************************************************************************************
Точно так же, как и обе предыдущие сортировки, сложность данного алгоритма
равна O(n2). Как мы видим, все 3 рассмотренных алгоритма совершенно идентичны
с точки зрения сложности. А также мы можем сказать, что использовать алгоритмы
подобной сложности нельзя на данных большого размера, т.к. скорость выполнения
алгоритма будет очень медленной. Попробуйте взять любой из рассмотренных
алгоритмов и отсортировать массив, в котором 1 000 000 элементов. В среднем,
пузырьковая сортировка может занять до получаса, в зависимости от мощности
вашего компьютера, что явно не подходит для использования в массивах подобного
размера.
 */

public class task_03 {

    public static void main(String[] args) {
        int[] array = new int[]{4, 2, 5, 8, 1, 9, 2, 3, 6, 8, 5};

        insertSort(array);

        for (int i = 0; i < array.length; i++) {
            System.out.print(array[i] + " ");
        }

    }

    public static void insertSort(int[] array) {
        for (int i = 0; i < array.length - 1; i++) {
            for (int j = i + 1; j < array.length; j++) {
                if (array[i]>array[j]){
                    int temp = array[i];
                    array[i] = array[j];
                    array[j] = temp;
                }
            }
        }
    }
}
