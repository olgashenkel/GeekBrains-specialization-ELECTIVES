/*
Задача № 1. Реализовать класс для бинарного дерева
1) Класс Node для хранения элементов дерева.
2) Класс Tree для реализации самого дерева.
3) Реализовать классы без методов.


Задача № 2. Реализовать метод добавления в дерево.
1) Добавить метод add(int value) для вставки числа в дерево
2) Для определения позиции перед вставкой выполнить поиск того места дерева,
    где это число могло бы находиться.
3) Важно! Бинарное дерево поиска не хранит повторяющиеся элементы.


Задача № 3. Реализовать метод поиска.
1) Добавить метод find(int vale) для проверки на существование элемента дерева
    со значением value.
2) Возвратить объект Node, если найден нужный элемент, иначе вернуть null.


Задача № 4. Реализация балансировки.
1) Добавить балансировку дерева на примере балансировки левостороннего красно-черного дерева.
    Красно-черное дерево имеет следующие критерии:
        - Каждая нода имеет цвет (красный или черный)
        - Корень дерева всегда черный
        - Новая нода всегда красная
        - Красные ноды могут быть только левым ребенком
        - У красной ноды все дети черного цвета
2) Вызвать балансировку при каждом изменении дерева


Задача № 5. Реализовать свой класс Хэш-таблицы.
1) Создать класс HashMap.
2) Для реализации корзинок необходимо использовать список из прошлого семинара.
3) Для начала можно реализовать простой класс без расширения в случае большого количества элементов.


Задание ДЗ. Вывод красно-черного дерева.
    Необходимо реализовать метод вывода на экран элементов красно-черного дерева,
    визуально показав связи между родительскими и дочерними узлами. Узлы дерева, стоящие
    на разном расстоянии от корневого узла выводить с разным отступом от начала строки
    (корневой элемент без отступа, дети корня с отступом в четыре пробела, дети детей корня с
    отступом в восемь пробелов, и так далее). Для решения этой задачи предполагается
    использование рекурсивного алгоритма обхода дерева в глубину.

 */


public class task {
    public static void main(String[] args) {

// ******************************************************************
// Задачи № 1-4
// ******************************************************************

//        Tree tree = new Tree();
//
//        for(int i=1; i<=5; i++){
//            tree.insert(i);
//        }
//
////        System.out.println(tree.find(1));
////        System.out.println(tree.find(6));


// ******************************************************************
// Задача № 5
// ******************************************************************

//        HashMap map = new HashMap();
//        map.push(1, 2);
//        map.push(3, 4);
//
//        System.out.println(map.find(1));
//        System.out.println(map.find(2));
//
//        map.remove(1);
//        map.push(2, 5);
//
//        System.out.println(map.find(1));
//        System.out.println(map.find(2));



// ******************************************************************
// Домашнее задание. Вывод красно-черного дерева.
// ******************************************************************

        DZ tree = new DZ();
        for(int i=1; i<=20; i++){
            tree.insert(i);

            tree.print();
        }

    }

}
