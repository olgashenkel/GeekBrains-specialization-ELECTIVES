/*
Дерево, внутреннее устройство

Дерево – это структура данных, эмулирующая древовидную структуру в виде
набора связанных узлов. Дерево является частным случае графа, в котором
отсутствуют циклические связи. Дерево состоит из узлов, связанных между собой
ребрами по принципу родитель-ребенок.

Один узел может содержать в себе любое количество детей, но у любого ребенка
может быть только один родитель. Самый верхний узел, не имеющий родителя,
называется корнем дерева, а узлы, не имеющие детей – листьями.
С точки зрения реализации в языках программирования, дерево очень похоже на
реализацию связного списка, за тем исключением, что каждый из узлов может
ссылаться не на один, а на любое количество дочерних элементов.
 */

import java.util.List;

/*
РЕКУРСИВНЫЙ ОБХОД УЗЛОВ ДЕРЕВА.

Классический ОБХОД В ГЛУБИНУ, при условии, что нет дублирующих элементов
(чтобы максимально просто обозначить логику обхода)
 */

public class task_01 {
    Node root;

    public class Node {
        int value;
        List<Node> children;
    }


    // приватная функция поиска необходимой ноды
    private Node find(Node node, int value) {
        if (node.value == value) {
            return node;
        } else {
            for (Node child : node.children) {
                Node result = find(child, value);
                if (result != null) {
                    return result;
                }
            }
        }
        return null;
    }


    /*
    публичная функция, которая будет отображать поличилось/не получилось
    найти необходимую ноду и вернуть её значение
   */
    public boolean exist(int value){
        if (root != null) {
            Node node = find(root, value);
            if (node != null) {
                return true;
            }
        }
        return false;
    }


}